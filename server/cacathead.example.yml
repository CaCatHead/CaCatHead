server:
  allowed_host:
    - 127.0.0.1
    - server  # This is docker-compose service name, and is used for nginx
    # -   # Config your domain here
  trusted_origin:
    - http://127.0.0.1
    # -   # Config your domain here
  # Root user
  root:
    username: !ENV ${CACATHEAD_ROOT_USER:cacathead}
    password: !ENV ${CACATHEAD_ROOT_PASS:12345678}

judge:
  name: !ENV ${NODE_NAME:local_dev}
  tasks: 1  # worker_max_tasks_per_child
  broadcast:
    ping: ping
    polygon: !ENV ${JUDGE_QUEUE:judge}.polygon
  queue:
    repository: !ENV ${JUDGE_QUEUE:judge}.repository
    contest: !ENV ${JUDGE_QUEUE:judge}.contest
    polygon: !ENV ${JUDGE_QUEUE:judge}.polygon

testcase:
  root: !ENV ${TESTCASE_ROOT:./.testcase}
  minio:
    host: !ENV ${MINIO_HOST}
    port: !ENV ${MINIO_PORT}
    username: !ENV ${MINIO_USERNAME}
    password: !ENV ${MINIO_PASSWORD}
    bucket: testcase

database:
  engine: !ENV ${CACATHEAD_DATABASE:sqlite}  # Or postgresql
  name: !ENV ${DB_NAME:db.sqlite3}
  host: !ENV ${DB_HOST}
  port: !ENV ${DB_PORT}
  username: !ENV ${DB_USER}
  password: !ENV ${DB_PASS}

redis:
  host: !ENV ${REDIS_HOST:localhost}
  port: !ENV ${REDIS_HOST:6379}
  password: !ENV ${REDIS_PASS}

rabbitmq:
  host: !ENV ${RMQ_HOST:localhost}
  port: !ENV ${RMQ_PORT:5672}
  username: !ENV ${RMQ_USER:guest}
  password: !ENV ${RMQ_PASS:guest}
