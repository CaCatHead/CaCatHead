version: '3.9'

services:
  nginx:
    build: ./deploy/nginx
    container_name: cacathead_nginx
    restart: always
    depends_on:
      - server
      - app
    networks:
      - cat_net
    volumes:
      - ./.cacathead/logs/nginx:/var/log/nginx
      - ./.cacathead/static:/var/www/cacathead/static
      - ./.cert:/root/cert
    ports:
      - 80:80
      - 443:443

  app:
    build:
      context: ./
      dockerfile: ./deploy/app/Dockerfile
    container_name: cacathead_app
    restart: always
    depends_on:
      - server
    networks:
      - cat_net
    # ports:
    #   - '3333:3333'

  server:
    build:
      context: ./
      dockerfile: ./deploy/server/Dockerfile
    container_name: cacathead_server
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - minio
    privileged: true
    restart: on-failure
    entrypoint: ./docker-entrypoint.sh
    command:
      - server
    # ports:
    #   - '8000:8000'
    networks:
      - cat_net
    volumes:
      - ./deploy/server/cacathead.yml:/root/CaCatHead/cacathead.yml
      - ./.cacathead/testcases:/root/testcases
      - ./.cacathead/static:/root/CaCatHead/static
    secrets:
      - db_pass
      - minio_pass
      - rmq_pass
    environment:
      WAIT_HOSTS: mysql:3306  # See https://github.com/ufoscout/docker-compose-wait
    env_file:
      - ./deploy/server/.env

  judge:
    build:
      context: ./
      dockerfile: ./deploy/server/Dockerfile
    container_name: cacathead_judge
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - minio
      - server
    privileged: true
    restart: on-failure
    entrypoint: ./docker-entrypoint.sh
    command:
      - judge
    networks:
      - cat_net
    volumes:
      - ./deploy/server/cacathead.yml:/root/CaCatHead/cacathead.yml
      - ./.cacathead/testcases:/root/testcases
      - ./.cacathead/logs/catj:/root/catj/logs
    secrets:
      - db_pass
      - minio_pass
      - rmq_pass
    env_file:
      - ./deploy/server/.env

  mysql:
    image: mysql:8.0.30
    container_name: cacathead_mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - cat_net
    ports:
      - '3306:3306'
    volumes:
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.cacathead/database:/var/lib/mysql
    secrets:
      - db_pass
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_pass

  minio:
    image: minio/minio:RELEASE.2022-12-12T19-27-27Z
    container_name: cacathead_minio
    command: server /data
    restart: always
    networks:
      - cat_net
    ports:
      - '9000:9000'
      - '9090:9090'
    volumes:
      - ./.cacathead/minio:/data
    secrets:
      - minio_pass
    environment:
      TZ: Asia/Shanghai
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/minio_pass

  redis:
    image: redis:7.0.5-alpine
    container_name: cacathead_redis
    restart: always
    networks:
      - cat_net
    # volumes:
    #   - /data:/data

  rabbitmq:
    image: rabbitmq:3.11.0
    container_name: cacathead_rabbitmq
    restart: always
    # ports:
    #   - '5672:5672'
    #   - '15672:15672'
    networks:
      - cat_net

networks:
  cat_net:

secrets:
  db_pass:
    file: ./pass.txt
  minio_pass:
    file: ./pass.txt
  rmq_pass:
    file: ./pass.txt
